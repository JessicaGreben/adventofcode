package day6

import (
	"testing"
)

func TestPart1(t *testing.T) {
	if want, got := 14560, part1(); want != got {
		t.Errorf("want: %d, got: %d", want, got)
	}
}

func TestPart2(t *testing.T) {
	wantOutput := [][]string{
		{"#", "#", "#", "#", ".", "#", ".", ".", "#", ".", "#", "#", "#", ".", ".", "#", ".", ".", "#", ".", "#", "#", "#", "#", ".", "#", "#", "#", ".", ".", "#", ".", ".", "#", ".", "#", "#", "#", "#", "."},
		{"#", ".", ".", ".", ".", "#", ".", "#", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", "#", ".", ".", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", ".", ".", ".", "#", "."},
		{"#", "#", "#", ".", ".", "#", "#", ".", ".", ".", "#", ".", ".", "#", ".", "#", "#", "#", "#", ".", "#", "#", "#", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", ".", ".", "#", ".", "."},
		{"#", ".", ".", ".", ".", "#", ".", "#", ".", ".", "#", "#", "#", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", ".", ".", "#", "#", "#", ".", ".", "#", ".", ".", "#", ".", ".", "#", ".", ".", "."},
		{"#", ".", ".", ".", ".", "#", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", ".", ".", "#", ".", ".", ".", ".", "#", ".", ".", "#", ".", "#", ".", ".", ".", "."},
		{"#", "#", "#", "#", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", "#", ".", ".", "#", ".", "#", "#", "#", "#", ".", "#", ".", ".", ".", ".", ".", "#", "#", ".", ".", "#", "#", "#", "#", "."},
		{},
	}
	gotOutput := part2()

	if want, got := len(wantOutput), len(gotOutput); want != got {
		t.Fatalf("want: %d, got: %d", want, got)
	}
	for i := range gotOutput {
		if want, got := len(wantOutput[i]), len(gotOutput[i]); want != got {
			t.Fatalf("want: %d, got: %d", want, got)
		}
		for j := range gotOutput[i] {
			if want, got := wantOutput[i][j], gotOutput[i][j]; want != got {
				t.Errorf("want: %v, got: %v", want, got)
			}
		}
	}
}

func TestProgramPart1(t *testing.T) {
	instructions := parseInput("testinput.txt")
	if want, got := 13140, run(instructions); want != got {
		t.Errorf("want: %v, got: %v", want, got)
	}
}

func TestProgramPart2(t *testing.T) {
	wantOutput := [][]string{
		{"#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", ".", "#", "#", ".", "."},
		{"#", "#", "#", ".", ".", ".", "#", "#", "#", ".", ".", ".", "#", "#", "#", ".", ".", ".", "#", "#", "#", ".", ".", ".", "#", "#", "#", ".", ".", ".", "#", "#", "#", ".", ".", ".", "#", "#", "#", "."},
		{"#", "#", "#", "#", ".", ".", ".", ".", "#", "#", "#", "#", ".", ".", ".", ".", "#", "#", "#", "#", ".", ".", ".", ".", "#", "#", "#", "#", ".", ".", ".", ".", "#", "#", "#", "#", ".", ".", ".", "."},
		{"#", "#", "#", "#", "#", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", ".", ".", ".", ".", "."},
		{"#", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#"},
		{"#", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#", "#", "#", "#", ".", ".", ".", ".", "."},
		{},
	}
	instructions := parseInput("testinput.txt")
	gotOutput := runPart2(instructions)

	if want, got := len(wantOutput), len(gotOutput); want != got {
		t.Fatalf("want: %d, got: %d", want, got)
	}
	for i := range gotOutput {
		if want, got := len(wantOutput[i]), len(gotOutput[i]); want != got {
			t.Fatalf("want: %d, got: %d", want, got)
		}
		for j := range gotOutput[i] {
			if want, got := wantOutput[i][j], gotOutput[i][j]; want != got {
				t.Errorf("want: %v, got: %v", want, got)
			}
		}
	}
}
